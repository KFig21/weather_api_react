{"version":3,"sources":["components/weather/Weather.js","components/search/Search.js","components/forecast/Forecast.js","assets/background-canyon.jpg","assets/background-sunny.jpg","assets/background-rain.jpg","assets/background-storm.jpg","assets/background-snow.jpg","assets/background-cloud-801.jpg","assets/background-cloud.jpg","assets/background-cloud-802.jpg","assets/background-cloud-803.jpg","assets/background-cloud-804.jpg","assets/background-fog.jpg","App.js","index.js"],"names":["Weather","now","tempType","handleTempType","name","fahrenheit","minFahrenheit","maxFahrenheit","celcius","minCelcius","maxCelcius","icon","description","className","onClick","Search","cityInput","countryInput","setCityInput","setCountryInput","getWeather","error","backgroundCode","isInvalid","action","type","placeholder","onChange","e","target","value","disabled","preventDefault","style","opacity","Forecast","forecast","map","day","index","date","API_key","App","useState","setNow","setTempType","setLat","setLon","setError","setForecast","setBackgroundCode","convertToMetric","x","convertToImperial","formatDate","Date","toLocaleDateString","timeZone","slice","console","log","getIcon","rangeId","bool","city","country","a","fetch","weather_api_call","json","weatherCall","cod","message","coord","lat","lon","forecast_api_call","forecastCall","dt","Math","round","main","temp","temp_min","temp_max","weather","id","forecastArr","i","obj","daily","min","max","push","useEffect","fallback","src","stormBGI","alt","rainBGI","snowBGI","fogBGI","sunnyBGI","cloudBGI801","cloudBGI802","cloudBGI803","cloudBGI804","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc9c6698.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./weather.scss\";\r\n\r\nexport default function Weather({ now, tempType, handleTempType }) {\r\n  const {\r\n    name,\r\n    fahrenheit,\r\n    minFahrenheit,\r\n    maxFahrenheit,\r\n    celcius,\r\n    minCelcius,\r\n    maxCelcius,\r\n    icon,\r\n    description,\r\n  } = now;\r\n\r\n  return (\r\n    <div className=\"weather\">\r\n      <div className=\"weather-container\">\r\n        <h1>{name}</h1>\r\n        <div className=\"info-container\">\r\n          <div className=\"side\">\r\n            <div className=\"icon-container\">\r\n              <i className={`wi ${icon}`}></i>\r\n            </div>\r\n          </div>\r\n          <div className=\"side\">\r\n            {\" \"}\r\n            <h2 className=\"current-temp\" onClick={handleTempType}>\r\n              {tempType === \"imperial\" ? `${fahrenheit}°F` : `${celcius}°C`}\r\n            </h2>\r\n            {/* min and max temps */}\r\n            <h3>\r\n              <span className=\"max-temp\">\r\n                {tempType === \"imperial\"\r\n                  ? `${maxFahrenheit}°`\r\n                  : `${maxCelcius}°`}\r\n              </span>\r\n              <span>/</span>\r\n              <span className=\"min-temp\">\r\n                {tempType === \"imperial\"\r\n                  ? `${minFahrenheit}°`\r\n                  : `${minCelcius}°`}\r\n              </span>\r\n            </h3>\r\n            <h4 className=\"description\">{description}</h4>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./search.scss\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nexport default function Search({\r\n  cityInput,\r\n  countryInput,\r\n  setCityInput,\r\n  setCountryInput,\r\n  getWeather,\r\n  error,\r\n  backgroundCode,\r\n}) {\r\n  const isInvalid = cityInput === \"\";\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    getWeather(cityInput, countryInput);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <form action=\"\">\r\n        <input\r\n          className={`input${backgroundCode}`}\r\n          type=\"text\"\r\n          placeholder=\"City\"\r\n          onChange={(e) => setCityInput(e.target.value)}\r\n        />\r\n        <input\r\n          className={`input${backgroundCode}`}\r\n          type=\"text\"\r\n          placeholder=\"Country\"\r\n          onChange={(e) => setCountryInput(e.target.value)}\r\n        />\r\n        <button\r\n          className={`button${backgroundCode}`}\r\n          disabled={isInvalid}\r\n          type=\"submit\"\r\n          onClick={handleSearch}\r\n        >\r\n          <SearchIcon />\r\n        </button>\r\n      </form>\r\n      <div className=\"error\" style={error ? { opacity: 1 } : { opacity: 0 }}>\r\n        <span>{error ? error : null}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./forecast.scss\";\r\n\r\nexport default function Forecast({ forecast, tempType, backgroundCode }) {\r\n  return (\r\n    <div className={`forecast-container bg${backgroundCode}`}>\r\n      {forecast.map((day, index) => {\r\n        const {\r\n          date,\r\n          minFahrenheit,\r\n          maxFahrenheit,\r\n          minCelcius,\r\n          maxCelcius,\r\n          icon,\r\n        } = day;\r\n        return (\r\n          <div className=\"day-container\">\r\n            <span className=\"date\">{date}</span>\r\n            <div className=\"icon-container\">\r\n              <i className={`wi ${icon}`}></i>\r\n            </div>\r\n            {/* min and max temps */}\r\n            <span className=\"minmax-container\">\r\n              <span className=\"max-temp\">\r\n                {tempType === \"imperial\"\r\n                  ? `${maxFahrenheit}°`\r\n                  : `${maxCelcius}°`}\r\n              </span>\r\n              <span>/</span>\r\n              <span className=\"min-temp\">\r\n                {tempType === \"imperial\"\r\n                  ? `${minFahrenheit}°`\r\n                  : `${minCelcius}°`}\r\n              </span>\r\n            </span>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background-canyon.0e5bcbbe.jpg\";","export default __webpack_public_path__ + \"static/media/background-sunny.e6162554.jpg\";","export default __webpack_public_path__ + \"static/media/background-rain.17415aab.jpg\";","export default __webpack_public_path__ + \"static/media/background-storm.9ece14c5.jpg\";","export default __webpack_public_path__ + \"static/media/background-snow.20bd9145.jpg\";","export default __webpack_public_path__ + \"static/media/background-cloud-801.25178247.jpg\";","export default __webpack_public_path__ + \"static/media/background-cloud.5058d1fa.jpg\";","export default __webpack_public_path__ + \"static/media/background-cloud-802.088c9780.jpg\";","export default __webpack_public_path__ + \"static/media/background-cloud-803.27698d06.jpg\";","export default __webpack_public_path__ + \"static/media/background-cloud-804.8c6c7f57.jpg\";","export default __webpack_public_path__ + \"static/media/background-fog.dd14cfba.jpg\";","import { useEffect, useState, Suspense } from \"react\";\nimport \"./app.scss\";\nimport \"weather-icons/css/weather-icons.css\";\nimport Weather from \"./components/weather/Weather\";\nimport Search from \"./components/search/Search\";\nimport Forecast from \"./components/forecast/Forecast\";\nimport canyonBGI from \"./assets/background-canyon.jpg\";\nimport sunnyBGI from \"./assets/background-sunny.jpg\";\nimport rainBGI from \"./assets/background-rain.jpg\";\nimport stormBGI from \"./assets/background-storm.jpg\";\nimport snowBGI from \"./assets/background-snow.jpg\";\nimport cloudBGI from \"./assets/background-cloud.jpg\";\nimport cloudBGI801 from \"./assets/background-cloud-801.jpg\";\nimport cloudBGI802 from \"./assets/background-cloud-802.jpg\";\nimport cloudBGI803 from \"./assets/background-cloud-803.jpg\";\nimport cloudBGI804 from \"./assets/background-cloud-804.jpg\";\nimport fogBGI from \"./assets/background-fog.jpg\";\n\nconst API_key = \"e705fd2733337e25a8b91977646312e1\";\n\nfunction App() {\n  const [cityInput, setCityInput] = useState(\"\");\n  const [countryInput, setCountryInput] = useState(\"\");\n  const [now, setNow] = useState({});\n  const [tempType, setTempType] = useState(\"imperial\");\n  // set longitude and latitude to get 5 day forecast\n  const [lat, setLat] = useState(\"\");\n  const [lon, setLon] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [forecast, setForecast] = useState([{}, {}, {}, {}, {}, {}, {}, {}]);\n  const [backgroundCode, setBackgroundCode] = useState(null);\n\n  const convertToMetric = (x) => {\n    return x - 273.15;\n  };\n  const convertToImperial = (x) => {\n    return ((x - 273.15) * 9) / 5 + 32;\n  };\n  function formatDate(date) {\n    return new Date(date * 1000)\n      .toLocaleDateString(\"en-US\", {\n        timeZone: \"UTC\",\n      })\n      .slice(0, -5);\n  }\n  const handleTempType = () => {\n    tempType === \"imperial\" ? setTempType(\"metric\") : setTempType(\"imperial\");\n    console.log(tempType);\n  };\n  const getIcon = (rangeId, bool) => {\n    // current day bool = true which allows the backgrounf img to change\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        if (bool === true) setBackgroundCode(200);\n        return \"wi-thunderstorm\";\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        if (bool === true) setBackgroundCode(300);\n        return \"wi-sleet\";\n        break;\n      case rangeId >= 500 && rangeId <= 521:\n        if (bool === true) setBackgroundCode(500);\n        return \"wi-storm-showers\";\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        if (bool === true) setBackgroundCode(600);\n        return \"wi-snow\";\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        if (bool === true) setBackgroundCode(700);\n        return \"wi-fog\";\n        break;\n      case rangeId === 800:\n        if (bool === true) setBackgroundCode(800);\n        return \"wi-day-sunny\";\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        if (bool === true && rangeId === 801) setBackgroundCode(801);\n        if (bool === true && rangeId === 802) setBackgroundCode(802);\n        if (bool === true && rangeId === 803) setBackgroundCode(803);\n        if (bool === true && rangeId === 804) setBackgroundCode(804);\n        return \"wi-day-fog\";\n        break;\n      default:\n        if (bool === true) setBackgroundCode(801);\n        return \"wi-day-fog\";\n    }\n  };\n\n  const getWeather = async (city, country) => {\n    // call api\n    const weather_api_call = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`\n    );\n    // convert to json\n    const weatherCall = await weather_api_call.json();\n    // check if city exists\n    if (weatherCall.cod === \"404\") {\n      setError(weatherCall.message);\n      return;\n    }\n    // fetch forecast data with longitude and latitude\n    const forecast_api_call = await fetch(\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${weatherCall.coord.lat}&lon=${weatherCall.coord.lon}&exclude=minutely,hourly,alerts&appid=${API_key}`\n    );\n    const forecastCall = await forecast_api_call.json();\n    console.log(\"weatherCall\", weatherCall);\n    console.log(\"forecastCall\", forecastCall);\n\n    setLat(weatherCall.coord.lat);\n    setLon(weatherCall.coord.lon);\n\n    // set current weather\n    setNow({\n      name: weatherCall.name,\n      date: formatDate(weatherCall.dt),\n      fahrenheit: Math.round(convertToImperial(weatherCall.main.temp)),\n      minFahrenheit: Math.round(convertToImperial(weatherCall.main.temp_min)),\n      maxFahrenheit: Math.round(convertToImperial(weatherCall.main.temp_max)),\n      celcius: Math.round(convertToMetric(weatherCall.main.temp)),\n      minCelcius: Math.round(convertToMetric(weatherCall.main.temp_min)),\n      maxCelcius: Math.round(convertToMetric(weatherCall.main.temp_max)),\n      icon: getIcon(weatherCall.weather[0].id, true),\n      description: weatherCall.weather[0].description,\n    });\n\n    // set next 7 day forecast\n    let forecastArr = [];\n    for (let i = 1; i < 8; i++) {\n      let obj = {};\n      obj.date = formatDate(forecastCall.daily[i].dt);\n      obj.minFahrenheit = Math.round(\n        convertToImperial(forecastCall.daily[i].temp.min)\n      );\n      obj.maxFahrenheit = Math.round(\n        convertToImperial(forecastCall.daily[i].temp.max)\n      );\n      obj.minCelcius = Math.round(\n        convertToMetric(forecastCall.daily[i].temp.min)\n      );\n      obj.maxCelcius = Math.round(\n        convertToMetric(forecastCall.daily[i].temp.max)\n      );\n      obj.icon = getIcon(forecastCall.daily[i].weather[0].id, false);\n      forecastArr.push(obj);\n    }\n    console.log(forecastArr);\n    setError(\"\");\n    setForecast(forecastArr);\n  };\n\n  useEffect(() => {\n    getWeather(\"Philadelphia\");\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <div className=\"day-info\">\n        {new Date().toLocaleDateString(\"en-US\", {\n          timeZone: \"UTC\",\n        })}\n      </div>\n      <div className=\"temp-info\">\n        <span onClick={() => handleTempType()}>\n          {tempType === \"imperial\" ? \"F°\" : \"C°\"}\n        </span>\n      </div>\n      <div className=\"content\">\n        <Search\n          cityInput={cityInput}\n          countryInput={countryInput}\n          setCityInput={setCityInput}\n          setCountryInput={setCountryInput}\n          getWeather={getWeather}\n          error={error}\n          backgroundCode={backgroundCode}\n        />\n        <Suspense fallback={<div className=\"suspense\">loading...</div>}>\n          <Weather\n            now={now}\n            tempType={tempType}\n            handleTempType={handleTempType}\n          />\n          <Forecast\n            forecast={forecast}\n            tempType={tempType}\n            backgroundCode={backgroundCode}\n          />\n        </Suspense>\n      </div>\n      <img\n        style={backgroundCode === 200 ? { opacity: 1 } : { opacity: 0 }}\n        src={stormBGI}\n        alt=\"thunderstorm\"\n      />\n      <img\n        style={backgroundCode === 300 ? { opacity: 1 } : { opacity: 0 }}\n        src={rainBGI}\n        alt=\"sleet\"\n      />\n      <img\n        style={backgroundCode === 500 ? { opacity: 1 } : { opacity: 0 }}\n        src={rainBGI}\n        alt=\"showers\"\n      />\n      <img\n        style={backgroundCode === 600 ? { opacity: 1 } : { opacity: 0 }}\n        src={snowBGI}\n        alt=\"snow\"\n      />\n      <img\n        style={backgroundCode === 700 ? { opacity: 1 } : { opacity: 0 }}\n        src={fogBGI}\n        alt=\"fog\"\n      />\n      <img\n        style={backgroundCode === 800 ? { opacity: 1 } : { opacity: 0 }}\n        src={sunnyBGI}\n        alt=\"sunny\"\n      />\n      <img\n        style={backgroundCode === 801 ? { opacity: 1 } : { opacity: 0 }}\n        src={cloudBGI801}\n        alt=\"few clouds\"\n      />\n      <img\n        style={backgroundCode === 802 ? { opacity: 1 } : { opacity: 0 }}\n        src={cloudBGI802}\n        alt=\"scattered clouds\"\n      />\n      <img\n        style={backgroundCode === 803 ? { opacity: 1 } : { opacity: 0 }}\n        src={cloudBGI803}\n        alt=\"broken clouds\"\n      />\n      <img\n        style={backgroundCode === 804 ? { opacity: 1 } : { opacity: 0 }}\n        src={cloudBGI804}\n        alt=\"overcast clouds\"\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}