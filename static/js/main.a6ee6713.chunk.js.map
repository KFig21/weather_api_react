{"version":3,"sources":["components/weather/Weather.js","components/search/Search.js","components/forecast/Forecast.js","assets/background-sunny.jpg","assets/background-drizzle.jpg","assets/background-rain.jpg","assets/background-storm.jpg","assets/background-snow.jpg","assets/background-cloud-801.jpg","assets/background-cloud-802.jpg","assets/background-cloud-803.jpg","assets/background-cloud-804.jpg","assets/background-fog.jpg","App.js","index.js"],"names":["Weather","now","tempType","handleTempType","backgroundCode","name","fahrenheit","minFahrenheit","maxFahrenheit","celcius","minCelcius","maxCelcius","icon","description","className","onClick","Search","cityInput","countryInput","setCityInput","setCountryInput","getWeather","error","recent","setRecent","isInvalid","action","type","placeholder","onChange","e","target","value","onFocus","disabled","preventDefault","trim","map","city","index","includes","indexOf","splice","arr","pop","handleRecentSearch","style","opacity","Forecast","forecast","day","date","API_key","App","useState","setNow","setTempType","setLat","setLon","setError","setForecast","setBackgroundCode","convertToMetric","x","convertToImperial","formatDate","Date","toLocaleDateString","timeZone","slice","getIcon","rangeId","bool","country","recentBool","a","fetch","weather_api_call","json","weatherCall","cod","message","coord","lat","lon","forecast_api_call","forecastCall","dt","Math","round","main","temp","temp_min","temp_max","weather","id","forecastArr","i","obj","daily","min","max","push","useEffect","undefined","src","stormBGI","alt","drizzleBGI","rainBGI","snowBGI","fogBGI","sunnyBGI","cloudBGI801","cloudBGI802","cloudBGI803","cloudBGI804","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a6ee6713.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./weather.scss\";\r\n\r\nexport default function Weather({\r\n  now,\r\n  tempType,\r\n  handleTempType,\r\n  backgroundCode,\r\n}) {\r\n  const {\r\n    name,\r\n    fahrenheit,\r\n    minFahrenheit,\r\n    maxFahrenheit,\r\n    celcius,\r\n    minCelcius,\r\n    maxCelcius,\r\n    icon,\r\n    description,\r\n  } = now;\r\n\r\n  return (\r\n    <div className=\"weather\">\r\n      <div className=\"weather-container\">\r\n        <div className={`bg${backgroundCode}`}>\r\n          <h1>{name}</h1>\r\n          <div className={`info-container`}>\r\n            <div className=\"side\">\r\n              <div className=\"icon-container\">\r\n                <i className={`wi ${icon}`}></i>\r\n              </div>\r\n            </div>\r\n            <div className=\"side\">\r\n              {\" \"}\r\n              <h2 className=\"current-temp\" onClick={handleTempType}>\r\n                {tempType === \"imperial\" ? `${fahrenheit}°F` : `${celcius}°C`}\r\n              </h2>\r\n              {/* min and max temps */}\r\n              <h3>\r\n                <span className=\"max-temp\">\r\n                  {tempType === \"imperial\"\r\n                    ? `${maxFahrenheit}°`\r\n                    : `${maxCelcius}°`}\r\n                </span>\r\n                <span>/</span>\r\n                <span className=\"min-temp\">\r\n                  {tempType === \"imperial\"\r\n                    ? `${minFahrenheit}°`\r\n                    : `${minCelcius}°`}\r\n                </span>\r\n              </h3>\r\n              <h4 className=\"description\">{description}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./search.scss\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\n\r\nexport default function Search({\r\n  cityInput,\r\n  countryInput,\r\n  setCityInput,\r\n  setCountryInput,\r\n  getWeather,\r\n  error,\r\n  backgroundCode,\r\n  recent,\r\n  setRecent,\r\n}) {\r\n  const isInvalid = cityInput === \"\";\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    getWeather(cityInput.trim(), countryInput);\r\n  };\r\n\r\n  const handleRecentSearch = (city) => {\r\n    if (!recent.includes(city)) {\r\n      let arr = [city, ...recent];\r\n      arr.pop();\r\n      setRecent(arr);\r\n    } else if (recent.includes(city)) {\r\n      let index = recent.indexOf(city);\r\n      recent.splice(index, 1);\r\n      let arr = [city, ...recent];\r\n      setRecent(arr);\r\n    }\r\n    getWeather(city, \"\", true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <form action=\"\">\r\n        <div className={`input-container input${backgroundCode}`}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"City\"\r\n            onChange={(e) => setCityInput(e.target.value)}\r\n            value={`${cityInput}`}\r\n            onFocus={() => setCityInput(\"\")}\r\n          />\r\n        </div>\r\n        <div className={`input-container input${backgroundCode}`}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Country\"\r\n            onChange={(e) => setCountryInput(e.target.value)}\r\n            value={`${countryInput}`}\r\n            onFocus={() => setCountryInput(\"\")}\r\n          />\r\n        </div>\r\n        <button\r\n          className={`button${backgroundCode}`}\r\n          disabled={isInvalid}\r\n          type=\"submit\"\r\n          onClick={handleSearch}\r\n        >\r\n          <SearchIcon />\r\n        </button>\r\n      </form>\r\n      <div className=\"recent\">\r\n        {recent.map((city, index) => {\r\n          if (index > 0) {\r\n            return (\r\n              <span\r\n                className={`city city${backgroundCode}`}\r\n                onClick={() => handleRecentSearch(`${city}`)}\r\n              >\r\n                {city}\r\n              </span>\r\n            );\r\n          }\r\n        })}\r\n      </div>\r\n      <div className=\"error\" style={error ? { opacity: 1 } : { opacity: 0 }}>\r\n        <span>{error ? error : null}</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./forecast.scss\";\r\n\r\nexport default function Forecast({ forecast, tempType, backgroundCode }) {\r\n  return (\r\n    <div className={`forecast-container bg${backgroundCode}`}>\r\n      {forecast.map((day, index) => {\r\n        const {\r\n          date,\r\n          minFahrenheit,\r\n          maxFahrenheit,\r\n          minCelcius,\r\n          maxCelcius,\r\n          icon,\r\n        } = day;\r\n        return (\r\n          <div className=\"day-container\">\r\n            <span className=\"date\">{date}</span>\r\n            <div className=\"icon-container\">\r\n              <i className={`wi ${icon}`}></i>\r\n            </div>\r\n            {/* min and max temps */}\r\n            <span className=\"minmax-container\">\r\n              <span className=\"max-temp\">\r\n                {tempType === \"imperial\"\r\n                  ? `${maxFahrenheit}°`\r\n                  : `${maxCelcius}°`}\r\n              </span>\r\n              <span>/</span>\r\n              <span className=\"min-temp\">\r\n                {tempType === \"imperial\"\r\n                  ? `${minFahrenheit}°`\r\n                  : `${minCelcius}°`}\r\n              </span>\r\n            </span>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/background-sunny.e6162554.jpg\";","export default __webpack_public_path__ + \"static/media/background-drizzle.8364219c.jpg\";","export default __webpack_public_path__ + \"static/media/background-rain.17415aab.jpg\";","export default __webpack_public_path__ + \"static/media/background-storm.9ece14c5.jpg\";","export default __webpack_public_path__ + \"static/media/background-snow.20bd9145.jpg\";","export default __webpack_public_path__ + \"static/media/background-cloud-801.25178247.jpg\";","export default __webpack_public_path__ + \"static/media/background-cloud-802.088c9780.jpg\";","export default __webpack_public_path__ + \"static/media/background-cloud-803.27698d06.jpg\";","export default __webpack_public_path__ + \"static/media/background-cloud-804.8c6c7f57.jpg\";","export default __webpack_public_path__ + \"static/media/background-fog.dd14cfba.jpg\";","import { useEffect, useState } from \"react\";\nimport \"./app.scss\";\nimport \"weather-icons/css/weather-icons.css\";\nimport Weather from \"./components/weather/Weather\";\nimport Search from \"./components/search/Search\";\nimport Forecast from \"./components/forecast/Forecast\";\nimport sunnyBGI from \"./assets/background-sunny.jpg\";\nimport drizzleBGI from \"./assets/background-drizzle.jpg\";\nimport rainBGI from \"./assets/background-rain.jpg\";\nimport stormBGI from \"./assets/background-storm.jpg\";\nimport snowBGI from \"./assets/background-snow.jpg\";\nimport cloudBGI801 from \"./assets/background-cloud-801.jpg\";\nimport cloudBGI802 from \"./assets/background-cloud-802.jpg\";\nimport cloudBGI803 from \"./assets/background-cloud-803.jpg\";\nimport cloudBGI804 from \"./assets/background-cloud-804.jpg\";\nimport fogBGI from \"./assets/background-fog.jpg\";\n\nconst API_key = \"e705fd2733337e25a8b91977646312e1\";\n\nfunction App() {\n  const [cityInput, setCityInput] = useState(\"\");\n  const [countryInput, setCountryInput] = useState(\"\");\n  const [now, setNow] = useState({});\n  const [tempType, setTempType] = useState(\"imperial\");\n  // set longitude and latitude to get 5 day forecast\n  const [lat, setLat] = useState(\"\");\n  const [lon, setLon] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [forecast, setForecast] = useState([{}, {}, {}, {}, {}, {}, {}, {}]);\n  const [backgroundCode, setBackgroundCode] = useState(null);\n  const [recent, setRecent] = useState([\n    \"Philadelphia\",\n    \"New York\",\n    \"Los Angeles\",\n    \"Tokyo\",\n    \"London\",\n    \"Sydney\",\n  ]);\n\n  const convertToMetric = (x) => {\n    return x - 273.15;\n  };\n  const convertToImperial = (x) => {\n    return ((x - 273.15) * 9) / 5 + 32;\n  };\n  function formatDate(date) {\n    return new Date(date * 1000)\n      .toLocaleDateString(\"en-US\", {\n        timeZone: \"UTC\",\n      })\n      .slice(0, -5);\n  }\n  const handleTempType = () => {\n    tempType === \"imperial\" ? setTempType(\"metric\") : setTempType(\"imperial\");\n  };\n  const getIcon = (rangeId, bool) => {\n    // current day bool = true which allows the backgrounf img to change\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        if (bool === true) setBackgroundCode(200);\n        return \"wi-thunderstorm\";\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        if (bool === true) setBackgroundCode(300);\n        return \"wi-sleet\";\n        break;\n      case rangeId >= 500 && rangeId <= 521:\n        if (bool === true) setBackgroundCode(500);\n        return \"wi-storm-showers\";\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        if (bool === true) setBackgroundCode(600);\n        return \"wi-snow\";\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        if (bool === true) setBackgroundCode(700);\n        return \"wi-fog\";\n        break;\n      case rangeId === 800:\n        if (bool === true) setBackgroundCode(800);\n        return \"wi-day-sunny\";\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        if (bool === true && rangeId === 801) setBackgroundCode(801);\n        if (bool === true && rangeId === 802) setBackgroundCode(802);\n        if (bool === true && rangeId === 803) setBackgroundCode(803);\n        if (bool === true && rangeId === 804) setBackgroundCode(804);\n        return \"wi-day-fog\";\n        break;\n      default:\n        if (bool === true) setBackgroundCode(801);\n        return \"wi-day-fog\";\n    }\n  };\n\n  const getWeather = async (city, country, recentBool) => {\n    // call api\n    const weather_api_call = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_key}`\n    );\n    // convert to json\n    const weatherCall = await weather_api_call.json();\n    // check if city exists\n    if (weatherCall.cod === \"404\") {\n      setError(weatherCall.message);\n      return;\n    }\n    // fetch forecast data with longitude and latitude\n    const forecast_api_call = await fetch(\n      `https://api.openweathermap.org/data/2.5/onecall?lat=${weatherCall.coord.lat}&lon=${weatherCall.coord.lon}&exclude=minutely,hourly,alerts&appid=${API_key}`\n    );\n    const forecastCall = await forecast_api_call.json();\n\n    setLat(weatherCall.coord.lat);\n    setLon(weatherCall.coord.lon);\n\n    // set current weather\n    setNow({\n      name: weatherCall.name,\n      date: formatDate(weatherCall.dt),\n      fahrenheit: Math.round(convertToImperial(weatherCall.main.temp)),\n      minFahrenheit: Math.round(convertToImperial(weatherCall.main.temp_min)),\n      maxFahrenheit: Math.round(convertToImperial(weatherCall.main.temp_max)),\n      celcius: Math.round(convertToMetric(weatherCall.main.temp)),\n      minCelcius: Math.round(convertToMetric(weatherCall.main.temp_min)),\n      maxCelcius: Math.round(convertToMetric(weatherCall.main.temp_max)),\n      icon: getIcon(weatherCall.weather[0].id, true),\n      description: weatherCall.weather[0].description,\n    });\n\n    //set recent\n    if (!recent.includes(weatherCall.name) && !recentBool) {\n      let arr = [weatherCall.name, ...recent];\n      arr.pop();\n      setRecent(arr);\n    } else if (recent.includes(weatherCall.name)) {\n      let index = recent.indexOf(weatherCall.name);\n      recent.splice(index, 1);\n      let arr = [weatherCall.name, ...recent];\n      setRecent(arr);\n    }\n\n    // set next 7 day forecast\n    let forecastArr = [];\n    for (let i = 1; i < 8; i++) {\n      let obj = {};\n      obj.date = formatDate(forecastCall.daily[i].dt);\n      obj.minFahrenheit = Math.round(\n        convertToImperial(forecastCall.daily[i].temp.min)\n      );\n      obj.maxFahrenheit = Math.round(\n        convertToImperial(forecastCall.daily[i].temp.max)\n      );\n      obj.minCelcius = Math.round(\n        convertToMetric(forecastCall.daily[i].temp.min)\n      );\n      obj.maxCelcius = Math.round(\n        convertToMetric(forecastCall.daily[i].temp.max)\n      );\n      obj.icon = getIcon(forecastCall.daily[i].weather[0].id, false);\n      forecastArr.push(obj);\n    }\n    setError(\"\");\n    setForecast(forecastArr);\n  };\n\n  useEffect(() => {\n    getWeather(\"Philadelphia\");\n  }, []);\n\n  var date = new Date();\n\n  return (\n    <div className=\"App\">\n      <div className=\"day-info\">\n        {new Date(date).toLocaleDateString(\"en-US\", {\n          timeZone: \"UTC\",\n        })}\n      </div>\n      <div className=\"temp-info\">\n        <span onClick={() => handleTempType()}>\n          {tempType === \"imperial\" ? \"F°\" : \"C°\"}\n        </span>\n      </div>\n      <div className=\"content\">\n        <Search\n          cityInput={cityInput}\n          countryInput={countryInput}\n          setCityInput={setCityInput}\n          setCountryInput={setCountryInput}\n          getWeather={getWeather}\n          error={error}\n          backgroundCode={backgroundCode}\n          recent={recent}\n          setRecent={setRecent}\n        />\n        {now.name !== undefined && (\n          <div className=\"lower-content\">\n            <Weather\n              now={now}\n              tempType={tempType}\n              handleTempType={handleTempType}\n              backgroundCode={backgroundCode}\n            />\n            <Forecast\n              forecast={forecast}\n              tempType={tempType}\n              backgroundCode={backgroundCode}\n            />\n          </div>\n        )}\n      </div>\n      <img\n        style={backgroundCode === 200 ? { opacity: 1 } : { opacity: 0 }}\n        src={stormBGI}\n        alt=\"thunderstorm\"\n      />\n      <img\n        style={backgroundCode === 300 ? { opacity: 1 } : { opacity: 0 }}\n        src={drizzleBGI}\n        alt=\"drizzle\"\n      />\n      <img\n        style={backgroundCode === 500 ? { opacity: 1 } : { opacity: 0 }}\n        src={rainBGI}\n        alt=\"showers\"\n      />\n      <img\n        style={backgroundCode === 600 ? { opacity: 1 } : { opacity: 0 }}\n        src={snowBGI}\n        alt=\"snow\"\n      />\n      <img\n        style={backgroundCode === 700 ? { opacity: 1 } : { opacity: 0 }}\n        src={fogBGI}\n        alt=\"fog\"\n      />\n      <img\n        style={backgroundCode === 800 ? { opacity: 1 } : { opacity: 0 }}\n        src={sunnyBGI}\n        alt=\"sunny\"\n      />\n      <img\n        style={backgroundCode === 801 ? { opacity: 1 } : { opacity: 0 }}\n        src={cloudBGI801}\n        alt=\"few clouds\"\n      />\n      <img\n        style={backgroundCode === 802 ? { opacity: 1 } : { opacity: 0 }}\n        src={cloudBGI802}\n        alt=\"scattered clouds\"\n      />\n      <img\n        style={backgroundCode === 803 ? { opacity: 1 } : { opacity: 0 }}\n        src={cloudBGI803}\n        alt=\"broken clouds\"\n      />\n      <img\n        style={backgroundCode === 804 ? { opacity: 1 } : { opacity: 0 }}\n        src={cloudBGI804}\n        alt=\"overcast clouds\"\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}